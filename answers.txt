Grep

# 1. List all files that have the word "error" (case insensitive for all).
grep -lir "error" .

# 2. Count how many files do not have the word "error".
grep -Lir "error" . | wc -l

# 3. List all error messages of any file with "error" in it.
grep -r "error" ./dir_6/file_64.log 

# 4. Count how many times "error" appears in a file.
grep -ir "error" ./dir_6/file_64.log | wc -l

# 5. Count how many times "error" appears in all files.
grep -ir "error" . | wc -l

# 6. List every line with "error" or "info" in it from all files.
grep -irE "error | info" .  OR grep -ire "error" -e "info" .

# 7. List every line with "error" and "todays date mm/dd/yyyy" in the line, regardless of position.
grep -ir "error" | grep -ir $(date +"%m/%d/%y") .

# 8. List every unique error message.
grep -ir "error" . | sort | uniq 

# 9. Count how many times each message is repeated.
grep -ir "error" . | sort | uniq -c

# 10. Print error messages that are repeated more than 1 time
grep -i "error" . | sort | uniq -d


Awk

# 1. Print the first and last column of each row, regardless of how many columns there are per row.
awk '{ print $1, $NF }' ./data.csv

# 2. Print the first and last rows of the file.
awk ' NR == 1 {first = $0} {last = $0} END {print first, last}'

# 3. Print every line with the word "Linux" in it.
awk ' /Linux/ {print}' data.csv OR awk '/Linux/' data.csv   the "print" is default.  awk 'tolower($0) ~ /linux/' data.csv   for case insensitivity

# 4. Print every line with the word "Linux" in the 3rd column.
awk '$3 == "Linux" data.csv

# 5. Print every record with a grade greater than 60.
awk 'NR > 2 && $3 > 60' data.csv    NR > 2 is for skipping the first two lines

# 6. Print the sum of the grade column.
awk 'NR > 2 {sum+=$3} END {print sum}' data.csv

# 7. Print the average of the grade column.
awk 'NR > 2 {sum+=$3} END {print sum/(NR-2)}' data.csv

# 8. Print the average of the grade column grouped by the course column.
awk '/ C /' data.csv | awk '{sum+=$3} END {print sum/NR}'


Sed

# 1. Update the CSV to use a comma instead of a blank space
sed -i 's/ /,/g' data.csv

# 2. Delete the last character of each line
sed -i 's/.$//g' data.csv

# 3. Replace the first occurrence of Linux with "Advanced Linux"
sed -e '1,2d' -e '0/Linux/s//Advanced Linux/' data.csv

# 4. Replace all occurrences of "C" to "C++" without modifying C-Sharp
sed 's/,C,/,C++,/g' data.csv 

# 5. Remove empty lines
sed '/^$/d' data.csv

Find

# 1. Find all .log files
find . -name *.log

# 2. Find all files larger than 1mb
find . -size +1M

# 3. Find all empty directories and delete them
find . -type d -empty -delete

# 4. Touch a file and find it by time (within the last 1 minute)
find . -type f -mmin -1

# 5. Find all .sh files and make them executable. Then find them again and print their permissions
find . -type f -name "*.sh" -exec chmod +x {} \;    find . -type f -name "*.sh" -exec ls -l {} \;

# 6. Find all executable files that are not ending in .sh and remove executable from them. Confirm it worked.
find . -type f -executable ! -name "*.sh" -exec chmod -x {} \;

# 7. Find all 777 files and print them. Then update them to 644 and Verify it worked

